generator client {
  provider = "prisma-client-js"
  output   = "../generated/brain"
}

datasource db {
  provider = "postgresql"
  url      = env("BRAIN_DATABASE_URL")
}

model assets {
  id           String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name         String?        @db.VarChar(256)
  created_at   DateTime       @default(now()) @db.Timestamp(6)
  updated_at   DateTime       @default(now()) @db.Timestamp(6)
  deleted_at   DateTime?      @db.Timestamp(6)
  transactions transactions[]
  user_assets  user_assets[]
}

model transactions {
  id                                  String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  buyer_id                            String?   @db.Uuid
  seller_id                           String?   @db.Uuid
  price                               Float
  amount                              Float
  state                               String?   @db.VarChar(24)
  asset_id                            String    @db.Uuid
  created_at                          DateTime  @default(now()) @db.Timestamp(6)
  updated_at                          DateTime  @default(now()) @db.Timestamp(6)
  deleted_at                          DateTime? @db.Timestamp(6)
  assets                              assets    @relation(fields: [asset_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users_transactions_buyer_idTousers  users?    @relation("transactions_buyer_idTousers", fields: [buyer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users_transactions_seller_idTousers users?    @relation("transactions_seller_idTousers", fields: [seller_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user_assets {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  amount     Float
  user_id    String    @db.Uuid
  asset_id   String    @db.Uuid
  created_at DateTime  @default(now()) @db.Timestamp(6)
  updated_at DateTime  @default(now()) @db.Timestamp(6)
  deleted_at DateTime? @db.Timestamp(6)
  assets     assets    @relation(fields: [asset_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users      users     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model users {
  id                                         String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  balance                                    Float
  created_at                                 DateTime       @default(now()) @db.Timestamp(6)
  updated_at                                 DateTime       @default(now()) @db.Timestamp(6)
  deleted_at                                 DateTime?      @db.Timestamp(6)
  transactions_transactions_buyer_idTousers  transactions[] @relation("transactions_buyer_idTousers")
  transactions_transactions_seller_idTousers transactions[] @relation("transactions_seller_idTousers")
  user_assets                                user_assets[]
}
