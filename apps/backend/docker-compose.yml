version: "3"

services:
  rabbitmq:
    image: backend-rabbitmq
    build: ./rabbitmq
    ports:
      - 15672:15672 #Management console
      - 5672:5672 #Actual exchange
    networks:
      - app_net
    restart: on-failure

  # Hub service is the entry point for all thing (except authentication)
  hub:
    image: backend-hub
    build: 
      context: .
      dockerfile: ./Hub.Dockerfile
    volumes:
      - ./logs:/hub/logs
    ports:
      - 4545:4545
    depends_on:
      - rabbitmq
    restart: on-failure
    networks:
      - app_net
  
    # Brain service consumes RabbitMQ request and deals with permanent storage
  brain:
    image: backend-brain
    build: 
      context: .
      dockerfile: ./Brain.Dockerfile
    depends_on: 
      - brain_postgres
      - rabbitmq
    restart: on-failure
    networks:
      - app_net

  brain_postgres:
    image: backend-brain_postgres
    build: ./brain_postgres
    volumes:
      - ./brain_postgres/scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./brain_postgres/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER"]
    expose:
      - 5443
    ports:
      - 5443:5443
    networks:
      - app_net
    command: -p 5443

  auth:
    image: backend-auth
    build: 
      context: .
      dockerfile: ./Auth.Dockerfile
    volumes:
      - ./logs:/auth/logs
    ports:
      - 4546:4546
    depends_on: 
      - brain_postgres
      - auth_postgres
    restart: on-failure
    networks:
      - app_net

  auth_postgres:
    image: backend-auth_postgres
    build: ./auth_postgres
    volumes:
      - ./auth_postgres/scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./auth_postgres/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER"]
    expose:
      - 5442
    ports:
      - 5442:5442
    networks:
      - app_net
    command: -p 5442

  # Redis cache server
  redis:
    image: redis:6.2.6-alpine
    volumes:
      - ./redis/redis.conf:/opt/bitnami/redis/mounted-etc/redis.conf
    environment:
      - REDIS_PASSWORD=redis
    ports:
      - 6379:6379
    networks:
      - app_net

networks:
  app_net: {}
